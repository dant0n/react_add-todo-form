{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","api/todos.ts","App.tsx","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","id","classNames","completed","title","TodoList","todos","map","username","userId","App","useState","setTitle","selectedUser","setSelectedUser","renderedTodos","setRenderedTodos","usersFromServer","renderedUsers","errors","setErrors","findUserById","find","useEffect","todosFromServer","action","method","onSubmit","event","preventDefault","isFormValid","prevState","select","handleValidation","newTodo","Math","max","concat","htmlFor","type","placeholder","value","onChange","currentTarget","replace","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5d2e8bdb.chunk.js","sourcesContent":["import { FC } from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import { FC } from 'react';\nimport classNames from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      key={todo.id}\n      className={classNames(\n        'TodoInfo',\n        { 'TodoInfo--completed': todo.completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      {todo.user && (\n        <UserInfo user={todo.user} />\n      )}\n    </article>\n  );\n};\n","import { FC } from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import './App.scss';\nimport {\n  ChangeEvent, FC, FormEvent, useEffect, useState,\n} from 'react';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/Todo';\nimport { Errors } from './types/Errors';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nexport const App: FC = () => {\n  const [title, setTitle] = useState('');\n  const [selectedUser, setSelectedUser] = useState(0);\n  const [renderedTodos, setRenderedTodos] = useState<Todo[]>([]);\n  const [renderedUsers] = useState([...usersFromServer]);\n  const [errors, setErrors] = useState<Errors>({});\n\n  const findUserById\n    = (id: number) => renderedUsers.find(user => user.id === id);\n\n  useEffect(() => {\n    setRenderedTodos(todosFromServer.map(todo => ({\n      ...todo,\n      user: findUserById(todo.userId),\n    })));\n  }, []);\n\n  const handleValidation = () => {\n    let isFormValid = true;\n\n    if (!title) {\n      isFormValid = false;\n      setErrors(prevState => ({\n        ...prevState,\n        title: 'Please enter a title',\n      }));\n    }\n\n    if (!selectedUser || selectedUser < 1) {\n      isFormValid = false;\n      setErrors(prevState => ({\n        ...prevState,\n        select: 'Please choose a user',\n      }));\n    }\n\n    return isFormValid;\n  };\n\n  const handleInput = (event: ChangeEvent<HTMLInputElement>) => {\n    setErrors(prevState => ({\n      ...prevState,\n      title: '',\n    }));\n    setTitle(event.currentTarget.value.replace(/[^a-zа-яA-zА-Я0-9 ]/ig, ''));\n  };\n\n  const handleSelect = (event: ChangeEvent<HTMLSelectElement>) => {\n    setErrors(prevState => ({\n      ...prevState,\n      select: '',\n    }));\n    setSelectedUser(+event.currentTarget.value);\n  };\n\n  const resetState = () => {\n    setTitle('');\n    setSelectedUser(0);\n  };\n\n  const addTodo = (event: FormEvent) => {\n    event.preventDefault();\n\n    if (!handleValidation()) {\n      return;\n    }\n\n    const generateId\n      = () => Math.max(...renderedTodos.map(todo => todo.id)) + 1;\n\n    const newTodo = {\n      id: generateId(),\n      title,\n      completed: false,\n      userId: selectedUser,\n      user: findUserById(selectedUser),\n    };\n\n    setRenderedTodos(renderedTodos.concat(newTodo));\n    resetState();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={addTodo}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title: </label>\n          <input\n            id=\"title\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleInput}\n          />\n          <span className=\"error\">{errors.title}</span>\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"select\">User: </label>\n          <select\n            id=\"select\"\n            data-cy=\"userSelect\"\n            value={selectedUser}\n            onChange={handleSelect}\n          >\n            <option\n              value=\"0\"\n              disabled\n            >\n              Choose a user\n            </option>\n            {renderedUsers.map(user => (\n              <option\n                key={user.id}\n                value={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          <span className=\"error\">{errors.select}</span>\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={renderedTodos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}